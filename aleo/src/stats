#!/bin/bash

#	example
#
#	{
#		"miner":"lolminer",
#		"algo":"nexapow",
#		"online":"1707474764",
#		"total_hr":"71842910",
#		"total_share":"1",
#		"total_badshare":"0",
#		"ver":"1.82a",
#		"temp":[31,28,29,29,31,29,30,30],
#		"temp2":[38,35,35,35,37,34,37,37],
#		"temp3":[0,0,0,0,0,0,0,0],
#		"fan":[45,45,44,45,44,44,45,46],
#		"hr":[11580000,27740000,0,0,2990000,0,22650000,6880000],
#		"share":[0,1,0,0,0,0,0,0],
#		"badshare":[0,0,0,0,0,0,0,0],
#		"invshare":[0,0,0,0,0,0,0,0],
#		"busid":["03","05","06","07","09","0b","0c","0d"],
#		"coin":"NEXA"
#	}

##!/usr/bin/env bash
#source $MINER_DIR/$CUSTOM_MINER/h-manifest.conf
#
#algo='aleo'
#version="3.0.3"
#stats=""
#unit="S/s"
#khs=0
#hs=()
#temp=()
#fan=()
#numbers=()
#
#khs=$(cat /root/hive/miners/custom/aleominer/aleominer1.log |grep "Speed(S/s)" | awk 'END {print}'| awk '{print $3}')
#khs=$(echo "scale=5; $khs / 1000" | bc)
#
#khs_num=$(echo "$khs" | jq -R . | jq -s 'map(tonumber)[0]')
#
#stats=$(jq -nc --argjson khs "$khs_num" \
#	--arg hs_units "$unit" \
#	--arg ver "$version" \
#	--arg algo "$algo" \
#	'{"khs":$khs, "hs_units":$hs_units, "ver":$ver, "algo":$algo}')
#
#
#echo "$stats"

algo="zksnark"
miner="aleominer"
ver="3.0.3"

LOG_FILE="/dog/log/aleominer.log"
LOG_FILE="/dog/log/aleo-f2pool-miner.log"
GPU_STATS="/run/dog/gpuStats"
gpuCount=$(jq '.gpu | length' < "$GPU_STATS")

busid_json='[]'
declare -a hr_data=( )

# initialise array with 0
for (( i=0; i < gpuCount; i++ )); do
  hr_data+=(0)
done
for (( i=0; i < gpuCount; i++ )); do
    busid=$(jq -r ".gpu[$i].b" < "$GPU_STATS")
    busid_json=$(jq ". += [\"$busid\"]" <<< "$busid_json")
done
hr_json=$(printf '%s\n' "${hr_data[@]}" | jq -R . | jq -s .)

total_hr=$(tail -n 200 $LOG_FILE |grep "Speed(S/s)" | awk 'END {print}'| awk '{print $3}')

data=$(
    jq -n \
        --arg algo "$algo" \
        --arg miner "$miner" \
        --arg ver "$ver" \
        --argjson busid "$busid_json" \
        --argjson hr "$hr_json" \
        --argjson total_hr "$total_hr" \
    '{
        miner: $miner,
        ver: $ver,
        algo: $algo,
        total_hr: $total_hr,
        busid: $busid,
        hr: $hr,
    }'
)

echo "$data" | jq -c
